METHOD_BODY -> STATEMENT_LIST 
STATEMENT_LIST -> STATEMENT STATEMENT_LIST' 
STATEMENT -> DECLARATION 
DECLARATION -> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE -> int 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> DECLARATION 
DECLARATION -> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE -> int 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> IF 
IF -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> id 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> relop SIMPLE_EXPRESSION 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> \L 
METHOD_BODY -> STATEMENT_LIST 
STATEMENT_LIST -> STATEMENT STATEMENT_LIST' 
STATEMENT -> DECLARATION 
DECLARATION -> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE -> int 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> DECLARATION 
DECLARATION -> PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE -> int 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> STATEMENT STATEMENT_LIST' 
STATEMENT -> IF 
IF -> if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> id 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> relop SIMPLE_EXPRESSION 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
STATEMENT -> ASSIGNMENT 
ASSIGNMENT -> id assign EXPRESSION ; 
EXPRESSION -> SIMPLE_EXPRESSION EXPRESSION' 
SIMPLE_EXPRESSION -> TERM SIMPLE_EXPRESSION' 
TERM -> FACTOR TERM' 
FACTOR -> num 
TERM' -> \L 
SIMPLE_EXPRESSION' -> \L 
EXPRESSION' -> \L 
STATEMENT_LIST' -> \L 
